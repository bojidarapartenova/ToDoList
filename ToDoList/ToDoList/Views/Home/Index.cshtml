@model IEnumerable<ToDoList.Models.ToDoItem>

@{
    ViewData["Title"] = " 𝑴𝒚 𝑻𝒐 𝑫𝒐 𝑳𝒊𝒔𝒕:";
}

<h2 style="text-align:center; margin-bottom:30px;">@ViewData["Title"]</h2>

<div class="container">
    @if (!Model.Any())
    {
        <div class="text-center my-5">
            <img src="https://68.media.tumblr.com/3c3ae5192dee90ee7186bedab3f4f60e/tumblr_o84ehabMdp1vtdb0lo1_1280.gif"
                alt="No tasks" style="max-width:200px; opacity:0.6;" />
            <h5 class="mt-3 text-muted">no tasks yet</h5>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title card-description">@item.Description</h5>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <div class="btn-group">
                                    <form asp-action="Pin" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <button type="submit" class="btn btn-sm custom-pin">
                                            @(item.IsPinned ? "Unpin" : "Pin")
                                        </button>
                                        @Html.AntiForgeryToken()
                                    </form>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm custom-edit">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm custom-delete">Delete</a>
                                </div>
                                <div>
                                    <input type="checkbox" class="task-complete-checkbox" data-card-id="@item.Id" />
                                </div>
                            </div>
                            <p class="text-muted small mb-0">Created at: @item.CreatedAt.ToString("g")</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    body {
        background: linear-gradient(135deg, #d8e1e8, #aab8c6);
    }

    .card {
        border-radius: 20px;
        min-height: 180px;
        box-shadow: rgba(0, 0, 0, 0.15) 2.4px 2.4px 3.2px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px) scale(1.02);
        box-shadow: rgba(0, 0, 0, 0.25) 4px 8px 12px;
    }

    .card-description {
        transition: all 0.3s ease;
    }

    .btn-group .btn {
        margin-right: 2px;
    }

    .custom-pin {
        background-color: #4a5c6a;
        color: #ccd0cf;
        transition: all 0.3s ease;
    }

    .custom-pin:hover {
        background-color: #5b6f82;
        color: #ffffff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    .custom-edit {
        background-color: #253745;
        color: #ccd0cf;
        transition: all 0.3s ease;
    }

    .custom-edit:hover {
        background-color: #31475a;
        color: #ffffff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    .custom-delete {
        background-color: #11212d;
        color: #ccd0cf;
        transition: all 0.3s ease;
    }

    .custom-delete:hover {
        background-color: #1b3245;
        color: #ffffff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    .task-complete-checkbox {
        width: 24px;
        height: 24px;
        cursor: pointer;
    }
</style>

<script>
    document.querySelectorAll('.task-complete-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', function () {
            const card = this.closest('.card');
            const description = card.querySelector('.card-description');

            if (this.checked) {
                card.style.backgroundColor = 'rgba(255, 255, 255, 0.6)';
                description.style.textDecoration = 'line-through';
                description.style.color = '#888';
            } else {
                card.style.backgroundColor = '';
                description.style.textDecoration = 'none';
                description.style.color = '';
            }
        });
    });
</script>
